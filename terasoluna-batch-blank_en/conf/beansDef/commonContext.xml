<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Definition of default exception handler -->
    <bean id="defaultExceptionHandler" 
        class="jp.terasoluna.fw.batch.exception.handler.DefaultExceptionHandler">
    </bean>

    <!-- Definition of message accessor -->
    <bean id="msgAcc"
        class="jp.terasoluna.fw.batch.message.MessageAccessorImpl" />

    <!-- Definition of message property file -->
    <bean id="messageSource" 
          class="org.springframework.context.support.ResourceBundleMessageSource">
      <property name="basenames" value="messages"/>
    </bean>

	<!-- Definition of file control utility -->
    <bean id="fileControl"
        class="jp.terasoluna.fw.file.util.FileControlImpl">
        <!-- New file always overwrites the old one -->
        <property name="checkFileExist" value="true"/>
    </bean>

	<!-- Definition of (input) DAO to access the CSV file -->
    <bean id="csvFileQueryDAO"
        class="jp.terasoluna.fw.file.dao.standard.CSVFileQueryDAO"
        parent="fileQueryDAO" />

	<!-- Definition of (input) DAO to access the fixed-length file -->
    <bean id="fixedFileQueryDAO"
        class="jp.terasoluna.fw.file.dao.standard.FixedFileQueryDAO"
        parent="fileQueryDAO" />

	<!-- Definition of (input) DAO to access the variable-length file -->
    <bean id="variableFileQueryDAO"
        class="jp.terasoluna.fw.file.dao.standard.VariableFileQueryDAO"
        parent="fileQueryDAO" />

	<!-- Definition of (input) DAO to access other files -->
    <bean id="plainFileQueryDAO"
        class="jp.terasoluna.fw.file.dao.standard.PlainFileQueryDAO"
        parent="fileQueryDAO" />

	<!-- Common definition of (input) DAO to access the file -->
    <bean id="fileQueryDAO"
        class="jp.terasoluna.fw.file.dao.standard.AbstractFileQueryDAO"
        abstract="true">
        <property name="columnParserMap" ref="columnParserMap" />
    </bean>

	<!-- Definition of (output) DAO to access the CSV file -->
    <bean id="csvFileUpdateDAO"
        class="jp.terasoluna.fw.file.dao.standard.CSVFileUpdateDAO"
        parent="fileUpdateDAO" />

	<!-- Definition of (output) DAO to access the fixed-length file -->
    <bean id="fixedFileUpdateDAO"
        class="jp.terasoluna.fw.file.dao.standard.FixedFileUpdateDAO"
        parent="fileUpdateDAO" />

	<!-- Definition of (output) DAO to access the variable-length file -->
    <bean id="variableFileUpdateDAO"
        class="jp.terasoluna.fw.file.dao.standard.VariableFileUpdateDAO"
        parent="fileUpdateDAO" />

	<!-- Definition of (output) DAO to access other files -->
    <bean id="plainFileUpdateDAO"
        class="jp.terasoluna.fw.file.dao.standard.PlainFileUpdateDAO"
        parent="fileUpdateDAO" />

	<!-- Common definition of (output) DAO to access the file -->
    <bean id="fileUpdateDAO"
        class="jp.terasoluna.fw.file.dao.standard.AbstractFileUpdateDAO"
        abstract="true" scope="prototype">
        <property name="columnFormatterMap" ref="columnFormatterMap" />
    </bean>

	<!-- Definition of (input) parser Map to access files -->
    <util:map id="columnParserMap">
        <entry key="java.lang.String">
            <bean
                class="jp.terasoluna.fw.file.dao.standard.NullColumnParser" />
        </entry>
        <entry key="java.util.Date">
            <bean
                class="jp.terasoluna.fw.file.dao.standard.DateColumnParser" />
        </entry>
        <entry key="java.math.BigDecimal">
            <bean
                class="jp.terasoluna.fw.file.dao.standard.DecimalColumnParser" />
        </entry>
        <entry key="int">
            <bean
                class="jp.terasoluna.fw.file.dao.standard.IntColumnParser" />
        </entry>
    </util:map>

	<!-- Definition of (output) formatter Map to access files -->
    <util:map id="columnFormatterMap">
        <entry key="java.lang.String">
            <bean class="jp.terasoluna.fw.file.dao.standard.NullColumnFormatter" />
        </entry>
        <entry key="java.util.Date">
            <bean class="jp.terasoluna.fw.file.dao.standard.DateColumnFormatter" />
        </entry>
        <entry key="java.math.BigDecimal">
            <bean class="jp.terasoluna.fw.file.dao.standard.DecimalColumnFormatter" />
        </entry>
        <entry key="int">
            <bean class="jp.terasoluna.fw.file.dao.standard.IntColumnFormatter" />
        </entry>
    </util:map>


	<!-- Definition of factory class that create input check class -->
    <bean id="validatorFactory" 
          class="jp.terasoluna.fw.validation.springmodules.DefaultValidatorFactoryEx"> 
      <property name="validationConfigLocations"> 
        <list> 
          <value>/validation/validator-rules.xml</value>
          <value>/validation/validator-rules-ex.xml</value>
          <value>/beansDef/validation.xml</value> 
        </list> 
      </property> 
    </bean> 

    <!-- Definition of default input check class -->
    <!-- It uses class name as Form name -->
    <bean id="beanValidator" 
          class="org.springmodules.validation.commons.DefaultBeanValidator"> 
      <property name="useFullyQualifiedClassName" value="true"/>
      <property name="validatorFactory" ref="validatorFactory"/>
    </bean> 





</beans>